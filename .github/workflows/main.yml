name: Build and Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branchon: push: tags: - '*'
on:
  push:
    tags: -'*'
  create:
    tags: -'*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Changelog
        uses: flowide/changelog-action@main
        id: Changelog
        with:
          to-tag: ${{github.ref}}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Get version from tag
        uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: '(v)(?<version>[0-9]+\.[0-9]+\.[0-9]+)'
      - name: Build frontend and package python
        run: |
          cd streamlit_flowide/frontend
          npm install --silent
          CI=false npm run build
          cd ../..
          python setup.py sdist bdist_wheel --version ${{steps.tagName.outputs.version}}
          zip -r build-artifacts.zip dist
      - name: Create Release
        id: create
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            ${{ steps.Changelog.outputs.changelog }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build-artifacts.zip
          asset_name: release.zip
          asset_content_type: application/zip